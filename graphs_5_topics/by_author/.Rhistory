layout.pos.col = matchidx$col))
}
}
}
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/by_author/author_probs_for_R.csv',sep=';')
krylov <- data[data$Author=='Крылов', ]
suhovo_kobylin <- data[data$Author=='Сухово-Кобылин', ]
chekhov <- data[data$Author=='Чехов', ]
pushkin <- data[data$Author=='Пушкин', ]
turgenev <- data[data$Author=='Тургенев', ]
bulgakov <- data[data$Author=='Булгаков', ]
gogol <- data[data$Author=='Гоголь', ]
ostrovskiy <- data[data$Author=='Островский', ]
shakhovskoy <- data[data$Author=='Шаховской', ]
sumarokov <- data[data$Author=='Сумароков', ]
tolstoylev <- data[data$Author=='ТолстойЛев', ]
tolstoyalexey <- data[data$Author=='ТолстойАлексей', ]
fonvizin <- data[data$Author=='Фонвизин', ]
blok <- data[data$Author=='Блок', ]
gumilev <- data[data$Author=='Гумилев', ]
krylov_graph <- ggplot(krylov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Krylov") + scale_y_continuous(limits=c(0,100))
suhovo_kobylin_graph <- ggplot(suhovo_kobylin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Suhovo-Kobylin") + scale_y_continuous(limits=c(0,100))
chekhov_graph <- ggplot(chekhov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Chekhov") + scale_y_continuous(limits=c(0,100))
pushkin_graph <- ggplot(pushkin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Pushkin") + scale_y_continuous(limits=c(0,100))
turgenev_graph <- ggplot(turgenev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Turgenev") + scale_y_continuous(limits=c(0,100))
bulgakov_graph <- ggplot(bulgakov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Bulgakov") + scale_y_continuous(limits=c(0,100))
gogol_graph <- ggplot(gogol, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gogol") + scale_y_continuous(limits=c(0,100))
ostrovskiy_graph <- ggplot(ostrovskiy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Ostrovskiy") + scale_y_continuous(limits=c(0,100))
shakhovskoy_graph <- ggplot(shakhovskoy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Shakhovskoy") + scale_y_continuous(limits=c(0,100))
sumarokov_graph <- ggplot(sumarokov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Sumarokov") + scale_y_continuous(limits=c(0,100))
tolstoylev_graph <- ggplot(tolstoylev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Leo Tolstoy") + scale_y_continuous(limits=c(0,100))
tolstoyalexey_graph <- ggplot(tolstoyalexey, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Alexey Tolstoy") + scale_y_continuous(limits=c(0,100))
fonvizin_graph <- ggplot(fonvizin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Fonvizin") + scale_y_continuous(limits=c(0,100))
blok_graph <- ggplot(blok, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Blok") + scale_y_continuous(limits=c(0,100))
gumilev_graph <- ggplot(gumilev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gumilev") + scale_y_continuous(limits=c(0,100))
multiplot(krylov_graph , suhovo_kobylin_graph , chekhov_graph , pushkin_graph , turgenev_graph,  bulgakov_graph , gogol_graph , ostrovskiy_graph , shakhovskoy_graph , sumarokov_graph , tolstoylev_graph,  tolstoyalexey_graph, fonvizin_graph, blok_graph, gumilev_graph, cols=3)
# Export image with width=700 and height=1300
library('ggplot2')
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/by_author/author_probs_for_R.csv',sep=';')
krylov <- data[data$Author=='Крылов', ]
suhovo_kobylin <- data[data$Author=='Сухово-Кобылин', ]
chekhov <- data[data$Author=='Чехов', ]
pushkin <- data[data$Author=='Пушкин', ]
turgenev <- data[data$Author=='Тургенев', ]
bulgakov <- data[data$Author=='Булгаков', ]
gogol <- data[data$Author=='Гоголь', ]
ostrovskiy <- data[data$Author=='Островский', ]
shakhovskoy <- data[data$Author=='Шаховской', ]
sumarokov <- data[data$Author=='Сумароков', ]
tolstoylev <- data[data$Author=='ТолстойЛев', ]
tolstoyalexey <- data[data$Author=='ТолстойАлексей', ]
fonvizin <- data[data$Author=='Фонвизин', ]
blok <- data[data$Author=='Блок', ]
gumilev <- data[data$Author=='Гумилев', ]
krylov_graph <- ggplot(krylov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Krylov") + scale_y_continuous(limits=c(0,100))
suhovo_kobylin_graph <- ggplot(suhovo_kobylin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Suhovo-Kobylin") + scale_y_continuous(limits=c(0,100))
chekhov_graph <- ggplot(chekhov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Chekhov") + scale_y_continuous(limits=c(0,100))
pushkin_graph <- ggplot(pushkin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Pushkin") + scale_y_continuous(limits=c(0,100))
turgenev_graph <- ggplot(turgenev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Turgenev") + scale_y_continuous(limits=c(0,100))
bulgakov_graph <- ggplot(bulgakov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Bulgakov") + scale_y_continuous(limits=c(0,100))
gogol_graph <- ggplot(gogol, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gogol") + scale_y_continuous(limits=c(0,100))
ostrovskiy_graph <- ggplot(ostrovskiy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Ostrovskiy") + scale_y_continuous(limits=c(0,100))
shakhovskoy_graph <- ggplot(shakhovskoy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Shakhovskoy") + scale_y_continuous(limits=c(0,100))
sumarokov_graph <- ggplot(sumarokov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Sumarokov") + scale_y_continuous(limits=c(0,100))
tolstoylev_graph <- ggplot(tolstoylev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Leo Tolstoy") + scale_y_continuous(limits=c(0,100))
tolstoyalexey_graph <- ggplot(tolstoyalexey, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Alexey Tolstoy") + scale_y_continuous(limits=c(0,100))
fonvizin_graph <- ggplot(fonvizin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Fonvizin") + scale_y_continuous(limits=c(0,100))
blok_graph <- ggplot(blok, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Blok") + scale_y_continuous(limits=c(0,100))
gumilev_graph <- ggplot(gumilev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gumilev") + scale_y_continuous(limits=c(0,100))
multiplot(krylov_graph , suhovo_kobylin_graph , chekhov_graph , pushkin_graph , turgenev_graph,  bulgakov_graph , gogol_graph , ostrovskiy_graph , shakhovskoy_graph , sumarokov_graph , tolstoylev_graph,  tolstoyalexey_graph, fonvizin_graph, blok_graph, gumilev_graph, cols=3)
# Export image with width=700 and height=1300
library('ggplot2')
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/by_author/author_probs_for_R.csv',sep=';')
krylov <- data[data$Author=='Крылов', ]
suhovo_kobylin <- data[data$Author=='Сухово-Кобылин', ]
chekhov <- data[data$Author=='Чехов', ]
pushkin <- data[data$Author=='Пушкин', ]
turgenev <- data[data$Author=='Тургенев', ]
bulgakov <- data[data$Author=='Булгаков', ]
gogol <- data[data$Author=='Гоголь', ]
ostrovskiy <- data[data$Author=='Островский', ]
shakhovskoy <- data[data$Author=='Шаховской', ]
sumarokov <- data[data$Author=='Сумароков', ]
tolstoylev <- data[data$Author=='ТолстойЛев', ]
tolstoyalexey <- data[data$Author=='ТолстойАлексей', ]
fonvizin <- data[data$Author=='Фонвизин', ]
blok <- data[data$Author=='Блок', ]
gumilev <- data[data$Author=='Гумилёв', ]
krylov_graph <- ggplot(krylov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Krylov") + scale_y_continuous(limits=c(0,100))
suhovo_kobylin_graph <- ggplot(suhovo_kobylin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Suhovo-Kobylin") + scale_y_continuous(limits=c(0,100))
chekhov_graph <- ggplot(chekhov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Chekhov") + scale_y_continuous(limits=c(0,100))
pushkin_graph <- ggplot(pushkin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Pushkin") + scale_y_continuous(limits=c(0,100))
turgenev_graph <- ggplot(turgenev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Turgenev") + scale_y_continuous(limits=c(0,100))
bulgakov_graph <- ggplot(bulgakov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Bulgakov") + scale_y_continuous(limits=c(0,100))
gogol_graph <- ggplot(gogol, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gogol") + scale_y_continuous(limits=c(0,100))
ostrovskiy_graph <- ggplot(ostrovskiy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Ostrovskiy") + scale_y_continuous(limits=c(0,100))
shakhovskoy_graph <- ggplot(shakhovskoy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Shakhovskoy") + scale_y_continuous(limits=c(0,100))
sumarokov_graph <- ggplot(sumarokov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Sumarokov") + scale_y_continuous(limits=c(0,100))
tolstoylev_graph <- ggplot(tolstoylev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Leo Tolstoy") + scale_y_continuous(limits=c(0,100))
tolstoyalexey_graph <- ggplot(tolstoyalexey, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Alexey Tolstoy") + scale_y_continuous(limits=c(0,100))
fonvizin_graph <- ggplot(fonvizin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Fonvizin") + scale_y_continuous(limits=c(0,100))
blok_graph <- ggplot(blok, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Blok") + scale_y_continuous(limits=c(0,100))
gumilev_graph <- ggplot(gumilev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gumilev") + scale_y_continuous(limits=c(0,100))
multiplot(krylov_graph , suhovo_kobylin_graph , chekhov_graph , pushkin_graph , turgenev_graph,  bulgakov_graph , gogol_graph , ostrovskiy_graph , shakhovskoy_graph , sumarokov_graph , tolstoylev_graph,  tolstoyalexey_graph, fonvizin_graph, blok_graph, gumilev_graph, cols=3)
# Export image with width=700 and height=1300
library('ggplot2')
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/by_author/author_probs_for_R.csv',sep=';')
krylov <- data[data$Author=='Крылов', ]
suhovo_kobylin <- data[data$Author=='Сухово-Кобылин', ]
chekhov <- data[data$Author=='Чехов', ]
pushkin <- data[data$Author=='Пушкин', ]
turgenev <- data[data$Author=='Тургенев', ]
bulgakov <- data[data$Author=='Булгаков', ]
gogol <- data[data$Author=='Гоголь', ]
ostrovskiy <- data[data$Author=='Островский', ]
shakhovskoy <- data[data$Author=='Шаховской', ]
sumarokov <- data[data$Author=='Сумароков', ]
tolstoylev <- data[data$Author=='ТолстойЛев', ]
tolstoyalexey <- data[data$Author=='ТолстойАлексей', ]
fonvizin <- data[data$Author=='Фонвизин', ]
blok <- data[data$Author=='Блок', ]
gumilev <- data[data$Author=='Гумилёв', ]
krylov_graph <- ggplot(krylov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Krylov") + scale_y_continuous(limits=c(0,100))
suhovo_kobylin_graph <- ggplot(suhovo_kobylin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Suhovo-Kobylin") + scale_y_continuous(limits=c(0,100))
chekhov_graph <- ggplot(chekhov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Chekhov") + scale_y_continuous(limits=c(0,100))
pushkin_graph <- ggplot(pushkin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Pushkin") + scale_y_continuous(limits=c(0,100))
turgenev_graph <- ggplot(turgenev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Turgenev") + scale_y_continuous(limits=c(0,100))
bulgakov_graph <- ggplot(bulgakov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Bulgakov") + scale_y_continuous(limits=c(0,100))
gogol_graph <- ggplot(gogol, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gogol") + scale_y_continuous(limits=c(0,100))
ostrovskiy_graph <- ggplot(ostrovskiy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Ostrovskiy") + scale_y_continuous(limits=c(0,100))
shakhovskoy_graph <- ggplot(shakhovskoy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Shakhovskoy") + scale_y_continuous(limits=c(0,100))
sumarokov_graph <- ggplot(sumarokov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Sumarokov") + scale_y_continuous(limits=c(0,100))
tolstoylev_graph <- ggplot(tolstoylev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Leo Tolstoy") + scale_y_continuous(limits=c(0,100))
tolstoyalexey_graph <- ggplot(tolstoyalexey, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Alexey Tolstoy") + scale_y_continuous(limits=c(0,100))
fonvizin_graph <- ggplot(fonvizin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Fonvizin") + scale_y_continuous(limits=c(0,100))
blok_graph <- ggplot(blok, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Blok") + scale_y_continuous(limits=c(0,100))
gumilev_graph <- ggplot(gumilev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gumilev") + scale_y_continuous(limits=c(0,100))
multiplot(krylov_graph , suhovo_kobylin_graph , chekhov_graph , pushkin_graph , turgenev_graph,  bulgakov_graph , gogol_graph , ostrovskiy_graph , shakhovskoy_graph , sumarokov_graph , tolstoylev_graph,  tolstoyalexey_graph, fonvizin_graph, blok_graph, gumilev_graph, cols=4)
# Export image with width=700 and height=1300
library('ggplot2')
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/by_author/author_probs_for_R.csv',sep=';')
krylov <- data[data$Author=='Крылов', ]
suhovo_kobylin <- data[data$Author=='Сухово-Кобылин', ]
chekhov <- data[data$Author=='Чехов', ]
pushkin <- data[data$Author=='Пушкин', ]
turgenev <- data[data$Author=='Тургенев', ]
bulgakov <- data[data$Author=='Булгаков', ]
gogol <- data[data$Author=='Гоголь', ]
ostrovskiy <- data[data$Author=='Островский', ]
shakhovskoy <- data[data$Author=='Шаховской', ]
sumarokov <- data[data$Author=='Сумароков', ]
tolstoylev <- data[data$Author=='ТолстойЛев', ]
tolstoyalexey <- data[data$Author=='ТолстойАлексей', ]
fonvizin <- data[data$Author=='Фонвизин', ]
blok <- data[data$Author=='Блок', ]
gumilev <- data[data$Author=='Гумилёв', ]
krylov_graph <- ggplot(krylov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Krylov") + scale_y_continuous(limits=c(0,100))
suhovo_kobylin_graph <- ggplot(suhovo_kobylin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Suhovo-Kobylin") + scale_y_continuous(limits=c(0,100))
chekhov_graph <- ggplot(chekhov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Chekhov") + scale_y_continuous(limits=c(0,100))
pushkin_graph <- ggplot(pushkin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Pushkin") + scale_y_continuous(limits=c(0,100))
turgenev_graph <- ggplot(turgenev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Turgenev") + scale_y_continuous(limits=c(0,100))
bulgakov_graph <- ggplot(bulgakov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Bulgakov") + scale_y_continuous(limits=c(0,100))
gogol_graph <- ggplot(gogol, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gogol") + scale_y_continuous(limits=c(0,100))
ostrovskiy_graph <- ggplot(ostrovskiy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Ostrovskiy") + scale_y_continuous(limits=c(0,100))
shakhovskoy_graph <- ggplot(shakhovskoy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Shakhovskoy") + scale_y_continuous(limits=c(0,100))
sumarokov_graph <- ggplot(sumarokov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Sumarokov") + scale_y_continuous(limits=c(0,100))
tolstoylev_graph <- ggplot(tolstoylev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Leo Tolstoy") + scale_y_continuous(limits=c(0,100))
tolstoyalexey_graph <- ggplot(tolstoyalexey, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Alexey Tolstoy") + scale_y_continuous(limits=c(0,100))
fonvizin_graph <- ggplot(fonvizin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Fonvizin") + scale_y_continuous(limits=c(0,100))
blok_graph <- ggplot(blok, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Blok") + scale_y_continuous(limits=c(0,100))
gumilev_graph <- ggplot(gumilev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Gumilev") + scale_y_continuous(limits=c(0,100))
multiplot(krylov_graph , suhovo_kobylin_graph , chekhov_graph , pushkin_graph , turgenev_graph,  bulgakov_graph , gogol_graph , ostrovskiy_graph , shakhovskoy_graph , sumarokov_graph , tolstoylev_graph,  tolstoyalexey_graph, fonvizin_graph, blok_graph, gumilev_graph, cols=5)
# Export image with width=700 and height=1300
library('ggplot2')
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/by_author/author_probs_for_R.csv',sep=';')
krylov <- data[data$Author=='Крылов', ]
suhovo_kobylin <- data[data$Author=='Сухово-Кобылин', ]
chekhov <- data[data$Author=='Чехов', ]
pushkin <- data[data$Author=='Пушкин', ]
turgenev <- data[data$Author=='Тургенев', ]
bulgakov <- data[data$Author=='Булгаков', ]
gogol <- data[data$Author=='Гоголь', ]
ostrovskiy <- data[data$Author=='Островский', ]
shakhovskoy <- data[data$Author=='Шаховской', ]
sumarokov <- data[data$Author=='Сумароков', ]
tolstoylev <- data[data$Author=='ТолстойЛев', ]
tolstoyalexey <- data[data$Author=='ТолстойАлексей', ]
fonvizin <- data[data$Author=='Фонвизин', ]
blok <- data[data$Author=='Блок', ]
gumilev <- data[data$Author=='Гумилёв', ]
krylov_graph <- ggplot(krylov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Крылов", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
suhovo_kobylin_graph <- ggplot(suhovo_kobylin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Сухово-Кобылин", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
chekhov_graph <- ggplot(chekhov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Чехов", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
pushkin_graph <- ggplot(pushkin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Пушкин", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
turgenev_graph <- ggplot(turgenev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Тургенев", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
bulgakov_graph <- ggplot(bulgakov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Булгаков", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
gogol_graph <- ggplot(gogol, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Гоголь", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
ostrovskiy_graph <- ggplot(ostrovskiy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Островский", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
shakhovskoy_graph <- ggplot(shakhovskoy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Шаховской", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
sumarokov_graph <- ggplot(sumarokov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Сумароков", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
tolstoylev_graph <- ggplot(tolstoylev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Лев Толстой", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
tolstoyalexey_graph <- ggplot(tolstoyalexey, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Алексей Толстой", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
fonvizin_graph <- ggplot(fonvizin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Фонвизин", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
blok_graph <- ggplot(blok, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Блок", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
gumilev_graph <- ggplot(gumilev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Гумилев", x='', y='Вероятность') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
multiplot(krylov_graph , suhovo_kobylin_graph , chekhov_graph , pushkin_graph , turgenev_graph,  bulgakov_graph , gogol_graph , ostrovskiy_graph , shakhovskoy_graph , sumarokov_graph , tolstoylev_graph,  tolstoyalexey_graph, fonvizin_graph, blok_graph, gumilev_graph, cols=5)
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("top", legend=rownames(gender_dist), cex=0.5, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("top", legend=rownames(gender_dist), cex=2, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("top", legend=rownames(gender_dist), cex=1.5, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("top", legend=rownames(gender_dist), cex=1.s, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("top", legend=rownames(gender_dist), cex=1.2, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("topleft", legend=rownames(gender_dist), cex=1.2, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("topright", legend=rownames(gender_dist), cex=1.2, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("topright", legend=rownames(gender_dist), cex=1.5, fill=c("pink","blue", "grey"))
gender_dist <- matrix(c(19.89, 25.64, 7.03, 16.36, 13.55, 17.54, 12.32, 15.9, 10.25, 23.56, 15.7, 22.27, 15.82, 14.52, 12.84, 30.21, 14.59, 12.02),ncol=6,byrow=TRUE)
rownames(gender_dist) <- c("Женский","Мужской","Неизвестно")
colnames(gender_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(gender_dist, main="", xlab="", ylab="Вероятность", col=c("pink","blue", "grey"), beside=TRUE)
legend("topright", legend=rownames(gender_dist), cex=1, fill=c("pink","blue", "grey"))
library('ggplot2')
genre_dist <- matrix(c(10.97, 26.21, 3.37, 6.07, 25.44, 27.94, 20.26, 24.32, 5.25, 7.71, 15.26, 27.2, 5.23, 1.7, 2.15, 89.2, 0.69, 1.03), ncol=6,byrow=TRUE)
rownames(genre_dist) <- c("Драма","Комедия","Трагедия")
colnames(genre_dist) <- c("Семья 1",'Любовь', 'Семья 2', 'Двор', 'Деньги', 'Люди')
barplot(genre_dist, main="", xlab="Темы", ylab="Вероятность", col=c("grey","orange", "black"), beside=TRUE)
legend("topright", legend=rownames(genre_dist), cex=1.2, fill=c("grey","orange", "black"))
library('ggplot2')
library(dplyr)
library(tidyr)
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/authors_contribution/joint_data.csv', stringsAsFactors = FALSE, sep=';')
data %>% separate(Author, c("Surname", "rest")) -> data
data <- data[,c('Surname')]
data <- as.table(table(unlist(data)))
data <- as.matrix(data)
data1 <- matrix(c(3,4,8,2,1,4,5,1,2,1,1,1,7,1,1,3,7,3,3,5,8,2,14,4), ncol=1, byrow=TRUE)
rownames(data1) <- c('Блок','Булгаков','Гоголь','Горький','Грибоедов','Гумилёв','Крылов','Лермонтов','Ломоносов','Маяковский','Найдёнов','Озеров','Островский','Писемский','Плавильщиков','Прутков','Пушкин','Сумароков','Сухово-Кобылин','ТолстойA','ТолстойЛ','Тургенев','Фонвизин','Чехов','Шаховской')
colnames(data1) <- c('Num_of_plays')
data1 <- t(data1)
authors <- c('Блок','Булгаков','Гоголь','Горький','Грибоедов','Гумилёв','Крылов','Лермонтов','Ломоносов','Маяковский','Найдёнов','Озеров','Островский','Писемский','Плавильщиков','Прутков','Пушкин','Сумароков','Сухово-Кобылин','ТолстойA','ТолстойЛ','Тургенев','Фонвизин','Чехов','Шаховской')
barplot(data1,main='Распределение пьес и авторов в корпусе', ylab='Количество пьес', las=2)
data
library('ggplot2')
library(dplyr)
library(tidyr)
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/authors_contribution/joint_data.csv', stringsAsFactors = FALSE, sep=';')
data %>% separate(Author, c("Surname", "rest")) -> data
data <- data[,c('Surname')]
data <- as.table(table(unlist(data)))
data <- as.matrix(data)
data1 <- matrix(c(3,4,8,2,1,4,5,1,2,1,1,1,7,1,1,3,7,3,3,3,2,8,2,14,4), ncol=1, byrow=TRUE)
rownames(data1) <- c('Блок','Булгаков','Гоголь','Горький','Грибоедов','Гумилёв','Крылов','Лермонтов','Ломоносов','Маяковский','Найдёнов','Озеров','Островский','Писемский','Плавильщиков','Прутков','Пушкин','Сумароков','Сухово-Кобылин','ТолстойA','ТолстойЛ','Тургенев','Фонвизин','Чехов','Шаховской')
colnames(data1) <- c('Num_of_plays')
data1 <- t(data1)
authors <- c('Блок','Булгаков','Гоголь','Горький','Грибоедов','Гумилёв','Крылов','Лермонтов','Ломоносов','Маяковский','Найдёнов','Озеров','Островский','Писемский','Плавильщиков','Прутков','Пушкин','Сумароков','Сухово-Кобылин','ТолстойA','ТолстойЛ','Тургенев','Фонвизин','Чехов','Шаховской')
barplot(data1,main='Распределение пьес и авторов в корпусе', ylab='Количество пьес', las=2)
library('ggplot2')
library(dplyr)
library(tidyr)
data <- read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Ira_Scripts/TopicModelling/rusdracor_topic_modeling/graphs_6_topics/authors_contribution/joint_data.csv', stringsAsFactors = FALSE, sep=';')
data %>% separate(Author, c("Surname", "rest")) -> data
data <- data[,c('Surname')]
data <- as.table(table(unlist(data)))
data <- as.matrix(data)
data1 <- matrix(c(3,4,8,2,1,4,5,1,2,1,1,1,7,1,1,3,7,3,3,3,2,8,2,14,4), ncol=1, byrow=TRUE)
rownames(data1) <- c('Блок','Булгаков','Гоголь','Горький','Грибоедов','Гумилёв','Крылов','Лермонтов','Ломоносов','Маяковский','Найдёнов','Озеров','Островский','Писемский','Плавильщиков','Прутков','Пушкин','Сумароков','Сухово-Кобылин','Толстой A','Толстой Л','Тургенев','Фонвизин','Чехов','Шаховской')
colnames(data1) <- c('Num_of_plays')
data1 <- t(data1)
authors <- c('Блок','Булгаков','Гоголь','Горький','Грибоедов','Гумилёв','Крылов','Лермонтов','Ломоносов','Маяковский','Найдёнов','Озеров','Островский','Писемский','Плавильщиков','Прутков','Пушкин','Сумароков','Сухово-Кобылин','Толстой A','Толстой Л','Тургенев','Фонвизин','Чехов','Шаховской')
barplot(data1,main='Распределение пьес и авторов в корпусе', ylab='Количество пьес', las=2)
data <- read.csv('./author_probs_for_R.csv', sep=';')
data
data <- read.csv('./author_probs_for_R.csv', sep=';', encoding='utf-8')
data
data <- read.csv('./author_probs_for_R.csv', sep=';', encoding='UTF-8')
data
data <- read.csv('./author_probs_for_R.csv', sep=';', encoding='UTF-8', stringsAsFactors=FALSE)
data
data <- read.csv('./author_probs_for_R.csv', sep=';', encoding='UTF-8', stringsAsFactors=FALSE)
data
# Export image with width=700 and height=1300
library('ggplot2')
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data <- read.csv('./author_probs_for_R.csv', sep=';', encoding='UTF-8', stringsAsFactors=FALSE)
krylov <- data[data$Author=='Крылов, Иван Андреевич', ]
suhovo_kobylin <- data[data$Author=='Сухово-Кобылин, Александр Васильевич', ]
chekhov <- data[data$Author=='Чехов, Антон Павлович', ]
pushkin <- data[data$Author=='Пушкин, Александр Сергеевич', ]
turgenev <- data[data$Author=='Тургенев, Иван Сергеевич', ]
bulgakov <- data[data$Author=='Булгаков, Михаил Афанасьевич', ]
gogol <- data[data$Author=='Гоголь, Николай Васильевич', ]
ostrovskiy <- data[data$Author=='Островский, Александр Николаевич', ]
shakhovskoy <- data[data$Author=='Шаховской, Александр Александрович', ]
sumarokov <- data[data$Author=='Сумароков, Александр Петрович', ]
tolstoylev <- data[data$Author=='Толстой, Лев Николаевич', ]
tolstoyalexey <- data[data$Author=='Толстой, Алексей Константинович', ]
fonvizin <- data[data$Author=='Фонвизин, Денис Иванович', ]
blok <- data[data$Author=='Блок, Александр Александрович', ]
gumilev <- data[data$Author=='Гумилёв, Николай Степанович', ]
krylov_graph <- ggplot(krylov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Крылов", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
suhovo_kobylin_graph <- ggplot(suhovo_kobylin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Сухово-Кобылин", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
chekhov_graph <- ggplot(chekhov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Чехов", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
pushkin_graph <- ggplot(pushkin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Пушкин", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
turgenev_graph <- ggplot(turgenev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Тургенев", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
bulgakov_graph <- ggplot(bulgakov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Булгаков", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
gogol_graph <- ggplot(gogol, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Гоголь", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
ostrovskiy_graph <- ggplot(ostrovskiy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Островский", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
shakhovskoy_graph <- ggplot(shakhovskoy, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Шаховской", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
sumarokov_graph <- ggplot(sumarokov, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Сумароков", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
tolstoylev_graph <- ggplot(tolstoylev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Лев Толстой", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
tolstoyalexey_graph <- ggplot(tolstoyalexey, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Алексей Толстой", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
fonvizin_graph <- ggplot(fonvizin, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Фонвизин", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
blok_graph <- ggplot(blok, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Блок", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
gumilev_graph <- ggplot(gumilev, aes(x=Topic, y=Probability)) + geom_bar(stat='identity') + labs(title="Гумилёв", x='', y='??????????????????????') + scale_y_continuous(limits=c(0,100)) + theme(axis.text.x=element_text(angle = 50, hjust = 1), axis.text=element_text(size=12))
multiplot(krylov_graph , suhovo_kobylin_graph , chekhov_graph , pushkin_graph , turgenev_graph,  bulgakov_graph , gogol_graph , ostrovskiy_graph , shakhovskoy_graph , sumarokov_graph , tolstoylev_graph,  tolstoyalexey_graph, fonvizin_graph, blok_graph, gumilev_graph, cols=5)
